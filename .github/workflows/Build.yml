name: Build Android Kernel with Clang 19

on:
  push:
    branches:
      - main  # أو استخدم فرعًا آخر إذا كان لديك فرع محدد
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # اختيار البيئة المناسبة (Ubuntu)
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3  # لاستنساخ مستودعك

    - name: Set up Clang 19
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-19 llvm-19 lld-19 gcc-10 g++-10 libncurses5-dev
        sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-19 100
        sudo update-alternatives --install /usr/bin/llvm llvm /usr/bin/llvm-19 100
        sudo update-alternatives --install /usr/bin/ld ld /usr/bin/ld-19 100

    - name: Set up the Kernel Source
      run: |
        git clone https://github.com/Mohamed4k/android_samsung_kernel_SM-G981N $GITHUB_WORKSPACE/kernel  # ضع رابط مستودع الكيرنل هنا
        cd $GITHUB_WORKSPACE/kernel
        git checkout Test  # قم بتحديد الفرع الذي يحتوي على الكود الخاص بك

    - name: Set up the Build Environment
      run: |
        mkdir -p $GITHUB_WORKSPACE/output  # مسار إخراج البناء
        cd $GITHUB_WORKSPACE/kernel
        export PATH=/usr/lib/llvm-19/bin:$PATH
        export CC=clang
        export CLANG_TRIPLE=aarch64-linux-gnu-

    - name: Build the Kernel
      run: |
        cd $GITHUB_WORKSPACE/kernel
        make clean
        make mrproper
        make O=$GITHUB_WORKSPACE/output ARCH=arm64 vendor/x1q_kor_singlex_defconfig # استبدل بـ defconfig الخاص بك
        make -j$(nproc) O=$GITHUB_WORKSPACE/output ARCH=arm64 CC=clang CROSS_COMPILE=aarch64-linux-android-

    - name: Upload Kernel Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: kernel-artifacts
        path: $GITHUB_WORKSPACE/output/arch/arm64/boot/*
        
